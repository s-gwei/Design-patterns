package com.sun.strategy;

public interface IStrategy {
	//每个锦囊妙计都是一个可执行的算法。
	/*
	 * 应用场景：容错恢复机制
	 * 在正常执行时，运行一套代码，出错时运行另一套代码
	 * 
	 * 策略模式作为一种软件设计模式，指对象有某个行为，
	 * 但是在不同的场景中，该行为有不同的实现算法。策略
	 * 模式属于对象的行为模式。其用意是针对一组算法，将
	 * 每一个算法封装到具有共同接口的独立的类中，从而使
	 * 得它们可以相互替换。最直接的例子就是我们java api
	 * 使用的Comparator接口，类如我现在想对自定义Student
	 * 类型数据进行排序。我们需要自定义一个比较策略才能进行排序，
	 * 每种比较策略就是就是一种算法，把每种比较策略封装在特定策略类方法中，
	 * 然后根据需要调用相应的策略类的策略方法进行排序就行了。
	 */
    public void operate();

}
